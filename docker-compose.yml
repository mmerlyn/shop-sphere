version: '3.8'

services:
  # üõí ORDER SERVICE (NEW)
  order-service:
    build:
      context: ./services/order-service
      dockerfile: Dockerfile.dev
    container_name: shopsphere-order-service
    restart: unless-stopped
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://order_user:order_password@postgres-orders:5432/shopsphere_orders
      - USER_SERVICE_URL=http://user-service:3001
      - PRODUCT_SERVICE_URL=http://product-service:3002
      - CART_SERVICE_URL=http://cart-service:3003
      - PAYMENT_SERVICE_URL=http://payment-service:3005
      - JWT_SECRET=order-service-super-secret-jwt-key-2025
      - JWT_EXPIRES_IN=24h
      - TAX_RATE=0.08
      - FREE_SHIPPING_THRESHOLD=100
      - CORS_ORIGIN=*
      - LOG_LEVEL=debug
    depends_on:
      - postgres-orders
      - redis
    volumes:
      - ./services/order-service:/app
      - /app/node_modules
    networks:
      - shopsphere-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üõí CART SERVICE (EXISTING)
  cart-service:
    build:
      context: ./services/cart-service
      dockerfile: Dockerfile.dev
    container_name: shopsphere-cart-service
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://shop_user:shop_password@postgres-users:5432/shop_cart_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - USER_SERVICE_URL=http://user-service:3001
      - PRODUCT_SERVICE_URL=http://product-service:3002
      - JWT_SECRET=cart-service-super-secret-jwt-key-2025
    depends_on:
      - postgres-users
      - redis
    volumes:
      - ./services/cart-service:/app
      - /app/node_modules
    networks:
      - shopsphere-network

  # üóÑÔ∏è POSTGRES FOR USERS & CART (EXISTING)
  postgres-users:
    image: postgres:15-alpine
    container_name: shopsphere-postgres-users
    restart: unless-stopped
    environment:
      POSTGRES_DB: shopsphere_users
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_users_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - shopsphere-network

  # üóÑÔ∏è POSTGRES FOR ORDERS (NEW)
  postgres-orders:
    image: postgres:15-alpine
    container_name: shopsphere-postgres-orders
    restart: unless-stopped
    environment:
      POSTGRES_DB: shopsphere_orders
      POSTGRES_USER: order_user
      POSTGRES_PASSWORD: order_password
    ports:
      - "5434:5432"
    volumes:
      - postgres_orders_data:/var/lib/postgresql/data
      - ./scripts/init-orders-db.sql:/docker-entrypoint-initdb.d/init-orders-db.sql
    networks:
      - shopsphere-network

  # üî¥ REDIS (EXISTING)
  redis:
    image: redis:7-alpine
    container_name: shopsphere-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - shopsphere-network

  # üçÉ MONGODB (EXISTING)
  mongodb:
    image: mongo:7
    container_name: shopsphere-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: shopsphere_products
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - shopsphere-network

  # üê∞ RABBITMQ (EXISTING)
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: shopsphere-rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5672:5672"   
      - "15672:15672" 
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - shopsphere-network

  # üìä PGADMIN FOR ORDER DATABASE (OPTIONAL)
  pgadmin-orders:
    image: dpage/pgadmin4:latest
    container_name: shopsphere-pgadmin-orders
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@shopsphere.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8081:80"
    depends_on:
      - postgres-orders
    networks:
      - shopsphere-network

volumes:
  postgres_users_data:
  postgres_orders_data:  # NEW VOLUME FOR ORDERS
  redis_data:
  mongodb_data:
  rabbitmq_data:

networks:
  shopsphere-network:
    driver: bridge